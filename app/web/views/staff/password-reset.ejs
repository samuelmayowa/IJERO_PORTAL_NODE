<!-- PASSWORD RESET (AdminLTE block only; layout wraps this automatically) -->
<section class="content">
  <div class="container-fluid">

    <h4 class="mb-3">Password Reset</h4>

    <div class="card card-success">
      <div class="card-header py-2">
        <h3 class="card-title">Password Reset</h3>
      </div>

      <div class="card-body">
        <!-- Filters -->
        <div class="form-row">
          <div class="form-group col-sm-2">
            <label>Staff No</label>
            <input id="fltStaffNo" class="form-control">
          </div>
          <div class="form-group col-sm-2">
            <label>Department</label>
            <input id="fltDept" class="form-control">
          </div>
          <div class="form-group col-sm-2">
            <label>School</label>
            <input id="fltSchool" class="form-control">
          </div>
          <div class="form-group col-sm-3">
            <label>Email</label>
            <input id="fltEmail" type="email" class="form-control">
          </div>
          <div class="form-group col-sm-3">
            <label>Name / Username</label>
            <input id="fltName" class="form-control">
          </div>
        </div>

        <div class="mb-2">
          <button id="btnSearch" class="btn btn-primary btn-sm mr-2">Search</button>
          <button id="btnClear"  class="btn btn-default btn-sm">Clear Search Input</button>
        </div>

        <div class="table-responsive">
          <table class="table table-bordered table-striped" id="tblUsers">
            <thead class="bg-primary text-white">
              <tr>
                <th style="width:120px;">Staff No</th>
                <th>Name</th>
                <th>Username</th>
                <th>Email</th>
                <th>Dept</th>
                <th>School</th>
                <th>Status</th>
                <th style="width:210px;">Actions</th>
              </tr>
            </thead>
            <tbody></tbody>
          </table>
        </div>

        <div class="d-flex align-items-center">
          <button class="btn btn-default btn-sm mr-2" id="pgPrev">Prev</button>
          <span class="mr-2">Page <span id="pgCur">1</span> of <span id="pgTot">1</span></span>
          <button class="btn btn-default btn-sm" id="pgNext">Next</button>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Change password modal -->
<div class="modal fade" id="pwdModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog"><div class="modal-content">
    <div class="modal-header py-2">
      <h5 class="modal-title">Change Password</h5>
      <button type="button" class="close" data-dismiss="modal"><span>&times;</span></button>
    </div>
    <div class="modal-body">
      <input type="hidden" id="pwdUserId">
      <div class="form-group">
        <label>New Password</label>
        <input type="text" id="pwdNew" class="form-control" placeholder="Enter new password">
      </div>
    </div>
    <div class="modal-footer py-2">
      <button class="btn btn-default" data-dismiss="modal">Cancel</button>
      <button id="btnDoChange" class="btn btn-primary">Save</button>
    </div>
  </div></div>
</div>

<script>
(function () {
  // IMPORTANT: your server exposes a CSRF token as EJS local "csrfToken".
  // Send it exactly in header name "CSRF-Token" (matches your old page).
  // If the variable isn't set, it will just be an empty string.
  const CSRF = '<%= typeof csrfToken !== "undefined" ? csrfToken : "" %>';

  const state = { page:1, pageSize:10, totalPages:1 };
  const tbody = document.querySelector('#tblUsers tbody');
  const pgCur = document.getElementById('pgCur');
  const pgTot = document.getElementById('pgTot');
  const v = id => document.getElementById(id).value.trim();

  function jsonOnly(res){
    const ct = (res.headers.get('content-type') || '').toLowerCase();
    if (!ct.includes('application/json')) throw new Error('Non-JSON response');
    return res.json();
  }
  function hdr(json=false){
    const h = { 'X-Requested-With':'XMLHttpRequest', 'Accept':'application/json' };
    if (json) h['Content-Type'] = 'application/json';
    if (CSRF) h['CSRF-Token'] = CSRF; // <-- exact header your app expects
    return h;
  }

  async function load() {
    const url = new URL('/staff/api/password/users', window.location.origin);
    url.searchParams.set('page', state.page);
    url.searchParams.set('pageSize', state.pageSize);
    url.searchParams.set('staffNumber', v('fltStaffNo'));
    url.searchParams.set('department', v('fltDept'));
    url.searchParams.set('school', v('fltSchool'));
    url.searchParams.set('email', v('fltEmail'));
    url.searchParams.set('name', v('fltName'));

    const res = await fetch(url, { credentials:'same-origin', headers: hdr() });
    if (!res.ok) { alert('Failed to load'); return; }
    const data = await res.json();

    state.totalPages = data.totalPages || 1;
    pgCur.textContent = data.page || 1;
    pgTot.textContent = state.totalPages;

    tbody.innerHTML = '';
    (data.rows || []).forEach(r => {
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${r.staff_no || ''}</td>
        <td>${r.name || ''}</td>
        <td>${r.username || ''}</td>
        <td>${r.email || ''}</td>
        <td>${r.department_name || ''}</td>
        <td>${r.school_name || ''}</td>
        <td><span class="badge badge-${r.status==='ACTIVE' ? 'success':'secondary'}">${r.status || ''}</span></td>
        <td>
          <button class="btn btn-sm btn-warning mr-1 js-reset"  data-id="${r.id}" data-name="${r.name || r.username}">Reset to College1</button>
          <button class="btn btn-sm btn-primary js-change" data-id="${r.id}" data-name="${r.name || r.username}">Custom Change</button>
        </td>
      `;
      tbody.appendChild(tr);
    });
  }

  // Filters
  document.getElementById('btnSearch').addEventListener('click', ()=>{ state.page=1; load(); });
  document.getElementById('btnClear').addEventListener('click', ()=>{
    ['fltStaffNo','fltDept','fltSchool','fltEmail','fltName'].forEach(id=>document.getElementById(id).value='');
    state.page=1; load();
  });

  // Paging
  document.getElementById('pgPrev').addEventListener('click', ()=>{ if(state.page>1){ state.page--; load(); }});
  document.getElementById('pgNext').addEventListener('click', ()=>{ if(state.page<state.totalPages){ state.page++; load(); }});

  // Row actions
  tbody.addEventListener('click', async (e)=>{
    const btn = e.target.closest('button'); if (!btn) return;
    const id = btn.getAttribute('data-id');
    const nm = btn.getAttribute('data-name') || 'user';

    // Reset to College1
    if (btn.classList.contains('js-reset')) {
      if (!confirm(`Reset ${nm}'s password to "College1"?`)) return;
      const res  = await fetch('/staff/api/password/reset/'+id, {
        method:'POST',
        credentials:'same-origin',
        headers: hdr() // <- includes CSRF-Token
      });
      const json = await jsonOnly(res);
      if (json.success) alert('Password reset to "College1".'); else alert(json.message || 'Reset failed');
      return;
    }

    // Open modal for custom change
    if (btn.classList.contains('js-change')) {
      document.getElementById('pwdUserId').value = id;
      document.getElementById('pwdNew').value = '';
      $('#pwdModal').modal('show');
    }
  });

  // Do custom change
  document.getElementById('btnDoChange').addEventListener('click', async ()=>{
    const id  = document.getElementById('pwdUserId').value;
    const pwd = document.getElementById('pwdNew').value.trim();
    if (!pwd) { alert('Enter a new password'); return; }

    try {
      const res  = await fetch('/staff/api/password/change', {
        method:'POST',
        credentials:'same-origin',
        headers: hdr(true), // <- includes Content-Type + CSRF-Token
        body: JSON.stringify({ staff_id:id, password:pwd })
      });
      const json = await jsonOnly(res);
      if (json.success) { $('#pwdModal').modal('hide'); alert('Password updated.'); }
      else alert(json.message || 'Update failed');
    } catch (err) {
      alert('Request blocked. Refresh and try again.');
      console.error(err);
    }
  });

  load();
})();
</script>
