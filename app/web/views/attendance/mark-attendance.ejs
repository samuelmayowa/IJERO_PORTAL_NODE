<!-- app/web/views/attendance/mark-attendance.ejs -->
<section class="content">
  <div class="container-fluid">
    <h4 class="mb-3"><%= title %></h4>

    <% if (messages && messages.error) { %>
      <div class="alert alert-danger"><%= messages.error %></div>
    <% } %>
    <% if (messages && messages.success) { %>
      <div class="alert alert-success"><%= messages.success %></div>
    <% } %>

    <div class="row">
      <!-- Left: Check-in form -->
      <div class="col-md-5">
        <div class="card card-success">
          <div class="card-header">
            <h5 class="card-title">Mark Attendance</h5>
          </div>
          <div class="card-body">
            <form action="/staff/attendance/mark" method="POST" id="markForm">
              <input type="hidden" name="_csrf" value="<%= csrfToken %>">
              <input type="hidden" name="latitude" id="lat">
              <input type="hidden" name="longitude" id="lng">

              <div class="form-group">
                <label>Date</label>
                <input class="form-control" type="date" value="<%= today %>" readonly>
              </div>

              <div class="form-group">
                <label>Current Time</label>
                <input class="form-control" id="nowTime" readonly>
              </div>

              <div class="form-group">
                <label>Reason (optional)</label>
                <select class="form-control" name="leave_reason" id="leave_reason">
                  <option value="">-- None --</option>
                  <option>Annual Leave</option>
                  <option>Maternity Leave</option>
                  <option>Sick</option>
                  <option>Sabbatical Leave</option>
                  <option>On Official Assignment</option>
                </select>
                <small class="text-muted">
                  Selecting a reason marks you <b>ON LEAVE</b> and bypasses location proximity.
                </small>
              </div>

              <div class="mb-2">
                <div id="map" style="height:260px;border-radius:8px;"></div>
                <small class="text-muted d-block mt-1">
                  <% 
                    const _name  = (staff && (staff.full_name || staff.username)) ? (staff.full_name || staff.username) : 'User';
                    const _radM  = Number(typeof radiusMeters !== 'undefined' ? radiusMeters : 160.934) || 160.934; // ~0.1 mile
                    const _radMi = (_radM / 1609.34).toFixed(1);
                  %>
                  <b><%= _name %>:</b>
                  <% if (office) { %>
                    Please move to your office location to check in.
                    You can check in within ~<%= _radMi %> mile (~<%= Math.round(_radM) %> m) of your office.
                    (ðŸ”µ Office Location shown on map)
                  <% } else { %>
                    Office location is not set for your department. Please contact ICT to configure your department coordinates.
                  <% } %>
                </small>
              </div>


              <button type="button" class="btn btn-success btn-block" id="btnCheckIn">Check In</button>
            </form>

            <form action="/staff/attendance/checkout" method="POST" class="mt-2" id="checkoutForm">
              <input type="hidden" name="_csrf" value="<%= csrfToken %>">
              <button type="button" class="btn btn-danger btn-block" id="btnCheckOut">Check Out</button>
            </form>

            <% if (!office) { %>
              <div class="alert alert-warning mt-3 mb-0">
                <b>Note:</b> Your department office location is not configured.
                You can still select a leave reason, but check-in proximity will fail until ICT sets it.
              </div>
            <% } %>
          </div>
        </div>
      </div>

      <!-- Right: Stats + Recent -->
      <div class="col-md-7">
        <div class="row">
          <div class="col-md-4">
            <div class="small-box bg-success">
              <div class="inner">
                <h3><%= (counts && counts.presentCount) || 0 %></h3>
                <p>Currently Online (Present) <%= counts && counts.isAdmin ? '' : '(Dept)' %></p>
              </div>
            </div>
          </div>
          <div class="col-md-4">
            <div class="small-box bg-danger">
              <div class="inner">
                <h3><%= (counts && counts.absentCount) || 0 %></h3>
                <p>Absent Today <%= counts && counts.isAdmin ? '' : '(Dept)' %></p>
              </div>
            </div>
          </div>
          <div class="col-md-4">
            <div class="small-box bg-warning">
              <div class="inner">
                <h3><%= (counts && counts.leaveCount) || 0 %></h3>
                <p>On Leave <%= counts && counts.isAdmin ? '' : '(Dept)' %></p>
              </div>
            </div>
          </div>
        </div>

        <div class="card card-primary">
          <div class="card-header"><h5 class="card-title">Your Attendance (recent)</h5></div>
          <div class="card-body p-0">
            <table class="table table-striped table-bordered mb-0">
              <thead>
                <tr>
                  <th style="width:160px">Date</th>
                  <th>Time In</th>
                  <th>Time Out</th>
                  <th>Status</th>
                  <th>Reason</th>
                  <th style="width:120px">Checkout By</th>
                </tr>
              </thead>
              <tbody>
                <% if (!recent || recent.length === 0) { %>
                  <tr><td colspan="6" class="text-center text-muted">No records</td></tr>
                <% } else { %>
                  <% recent.forEach(r => { %>
                    <tr>
                      <td><%= new Date(r.date).toDateString() %></td>
                      <td><%= r.check_in_time || '-' %></td>
                      <td><%= r.check_out_time || '-' %></td>
                      <td><%= r.status || '-' %></td>
                      <td><%= r.leave_reason || '' %></td>
                      <td><%= r.check_out_time ? (r.marked_by_system ? 'System' : 'Staff') : '' %></td>
                    </tr>
                  <% }) %>
                <% } %>
            </table>

            <!-- Pagination -->
            <div class="p-2 d-flex justify-content-between align-items-center">
              <div class="text-muted small">
                Page <%= (pagination && pagination.page) || 1 %> of <%= (pagination && pagination.totalPages) || 1 %>
              </div>
              <div>
                <% const cur = (pagination && pagination.page) || 1;
                   const last = (pagination && pagination.totalPages) || 1; %>
                <a class="btn btn-sm btn-outline-secondary <%= cur <= 1 ? 'disabled' : '' %>"
                   href="/staff/attendance/mark?page=<%= Math.max(1, cur - 1) %>">Prev</a>
                <% for (let p = 1; p <= last; p++) { %>
                  <a class="btn btn-sm <%= p === cur ? 'btn-primary' : 'btn-outline-primary' %>"
                     href="/staff/attendance/mark?page=<%= p %>"><%= p %></a>
                <% } %>
                <a class="btn btn-sm btn-outline-secondary <%= cur >= last ? 'disabled' : '' %>"
                   href="/staff/attendance/mark?page=<%= Math.min(last, cur + 1) %>">Next</a>
              </div>
            </div>

          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script>
  function tick(){ document.getElementById('nowTime').value = new Date().toLocaleTimeString(); }
  setInterval(tick, 1000); tick();

  // data from server
  const office = <%- JSON.stringify(office || null) %>;

  // init map first (center on office if available; otherwise fallback coords)
  var defaultLat = office ? Number(office.latitude) : 7.808824;
  var defaultLng = office ? Number(office.longitude) : 5.083040;
  var map = L.map('map').setView([defaultLat, defaultLng], 16);
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { attribution:'' }).addTo(map);

  if (office) {
    L.marker([Number(office.latitude), Number(office.longitude)])
      .addTo(map).bindPopup('Office Location');
  }

  navigator.geolocation.getCurrentPosition(function(p){
    const lat = p.coords.latitude, lng = p.coords.longitude;
    document.getElementById('lat').value = lat;
    document.getElementById('lng').value = lng;

    L.marker([lat, lng])
      .addTo(map)
      .bindPopup("<b><%= (staff && (staff.full_name || staff.username)) ? (staff.full_name || staff.username) : 'You' %></b> â€” You're here")
      .openPopup();

    map.setView([lat, lng], 17);
  }, function(){
    document.getElementById('lat').value = '';
    document.getElementById('lng').value = '';
    var msg = 'Location is turned off or blocked by your browser. Please enable location services.';
    if (window.Modal && Modal.error) Modal.error(msg); else alert(msg);
  }, { enableHighAccuracy:true, timeout:8000 });
</script>

<script>
  (function(){
    function showModal(kind, msg){
      if (window.Modal && Modal[kind]) Modal[kind](msg);
      else alert(msg);
    }

    document.getElementById('btnCheckIn').addEventListener('click', function(){
      const leave = document.getElementById('leave_reason').value.trim();
      const lat = document.getElementById('lat').value;
      const lng = document.getElementById('lng').value;

      // Client-side hint BEFORE hitting server:
      if (!leave && (!lat || !lng)) {
        showModal('error', 'You are expected to be in the office. Please move to your office location and try again.');
        return;
      }
      if (confirm('Are you sure you want to Check In?')) {
        document.getElementById('markForm').submit();
      }
    });

    document.getElementById('btnCheckOut').addEventListener('click', function(){
      if (confirm('Are you sure you want to Check Out?')) {
        document.getElementById('checkoutForm').submit();
      }
    });
  })();
</script>

<script>
  // Show SUCCESS / ERROR popups from flash as styled modal when available
  (function () {
    const msg = <%- JSON.stringify(messages || {}) %>;
    if (msg.error)  { if (window.Modal && Modal.error)  Modal.error(msg.error);  else alert(msg.error); }
    if (msg.success){ if (window.Modal && Modal.success)Modal.success(msg.success); else alert(msg.success); }
  })();
</script>
